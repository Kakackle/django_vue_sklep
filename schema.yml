openapi: 3.0.3
info:
  title: Django + Vue Sklep API
  version: 1.0.0
  description: Django serving vue ecommerce store
paths:
  /api/address/:
    get:
      operationId: api_address_list
      parameters:
      - in: query
        name: user
        schema:
          type: string
      - in: query
        name: user__username
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: api_address_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/address/{slug}/:
    get:
      operationId: api_address_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: api_address_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: api_address_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: api_address_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/carts/:
    get:
      operationId: api_carts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartList'
          description: ''
    post:
      operationId: api_carts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/carts/{slug}/:
    get:
      operationId: api_carts_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: api_carts_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_carts_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_carts_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/carts/{slug}/clear/:
    put:
      operationId: api_carts_clear_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_carts_clear_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/carts/{slug}/items/:
    get:
      operationId: api_carts_items_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartItemList'
          description: ''
    post:
      operationId: api_carts_items_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/discounts/:
    get:
      operationId: api_discounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
    post:
      operationId: api_discounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/discounts/{slug}/:
    get:
      operationId: api_discounts_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: api_discounts_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: api_discounts_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: api_discounts_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/effecttypes/:
    get:
      operationId: api_effecttypes_list
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EffectType'
          description: ''
    post:
      operationId: api_effecttypes_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EffectType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EffectType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EffectType'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectType'
          description: ''
  /api/effecttypes/{slug}/:
    get:
      operationId: api_effecttypes_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectType'
          description: ''
    put:
      operationId: api_effecttypes_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EffectType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EffectType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EffectType'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectType'
          description: ''
    patch:
      operationId: api_effecttypes_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEffectType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEffectType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEffectType'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectType'
          description: ''
    delete:
      operationId: api_effecttypes_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/manufacturers/:
    get:
      operationId: api_manufacturers_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: country
        schema:
          type: string
          enum:
          - czech
          - germany
          - poland
          - usa
        description: |-
          * `usa` - USA
          * `poland` - Poland
          * `germany` - Germany
          * `czech` - Czech Republic
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: rating_average
        schema:
          type: number
      - in: query
        name: rating_gte
        schema:
          type: number
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedManufacturerList'
          description: ''
    post:
      operationId: api_manufacturers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Manufacturer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
  /api/manufacturers/{slug}/:
    get:
      operationId: api_manufacturers_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
    put:
      operationId: api_manufacturers_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Manufacturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
    patch:
      operationId: api_manufacturers_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManufacturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManufacturer'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
    delete:
      operationId: api_manufacturers_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/order_items/{id}/:
    get:
      operationId: api_order_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: api_order_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: api_order_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: api_order_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: string
      - in: query
        name: user__username
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/{id}/items/:
    get:
      operationId: api_orders_items_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderItemList'
          description: ''
    post:
      operationId: api_orders_items_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/productimages/:
    get:
      operationId: api_productimages_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: product
        schema:
          type: string
      - in: query
        name: product__slug
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: api_productimages_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/productimages/{slug}/:
    get:
      operationId: api_productimages_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: api_productimages_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_productimages_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: api_productimages_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - in: query
        name: discount
        schema:
          type: number
      - in: query
        name: discount_gte
        schema:
          type: number
      - in: query
        name: effect_type
        schema:
          type: string
      - in: query
        name: effect_type__name
        schema:
          type: string
      - in: query
        name: favourited_by
        schema:
          type: string
      - in: query
        name: favourited_by__user__username
        schema:
          type: string
      - in: query
        name: manufacturer
        schema:
          type: string
      - in: query
        name: manufacturer__slug
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: price_gte
        schema:
          type: number
      - in: query
        name: price_lte
        schema:
          type: number
      - in: query
        name: rating_average
        schema:
          type: number
      - in: query
        name: rating_gte
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{slug}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/products/{slug}/add_cart:
    put:
      operationId: api_products_add_cart_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_add_cart_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{slug}/favourite:
    put:
      operationId: api_products_favourite_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_favourite_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{slug}/remove_cart:
    put:
      operationId: api_products_remove_cart_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_remove_cart_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{slug}/subtract_cart:
    put:
      operationId: api_products_subtract_cart_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_subtract_cart_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/profiles/:
    get:
      operationId: api_profiles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileList'
          description: ''
    post:
      operationId: api_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/{slug}/:
    get:
      operationId: api_profiles_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_profiles_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_profiles_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: api_profiles_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/reviews/:
    get:
      operationId: api_reviews_list
      parameters:
      - in: query
        name: author
        schema:
          type: string
      - in: query
        name: author__username
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: product
        schema:
          type: string
      - in: query
        name: product__slug
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: api_reviews_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/{slug}/:
    get:
      operationId: api_reviews_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_reviews_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_reviews_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_reviews_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/reviews/{slug}/like:
    get:
      operationId: api_reviews_like_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_reviews_like_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_reviews_like_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_reviews_like_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/shippings/:
    get:
      operationId: api_shippings_list
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipping'
          description: ''
    post:
      operationId: api_shippings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipping'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
  /api/shippings/{slug}/:
    get:
      operationId: api_shippings_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    put:
      operationId: api_shippings_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipping'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    patch:
      operationId: api_shippings_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShipping'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipping'
          description: ''
    delete:
      operationId: api_shippings_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/subscribers/:
    get:
      operationId: api_subscribers_list
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
          description: ''
    post:
      operationId: api_subscribers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
  /api/subscribers/{slug}/:
    get:
      operationId: api_subscribers_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
    put:
      operationId: api_subscribers_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
    patch:
      operationId: api_subscribers_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscriber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscriber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscriber'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
          description: ''
    delete:
      operationId: api_subscribers_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{username}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        country:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 100
        street_number:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        zipcode:
          type: string
          maxLength: 8
      required:
      - country
      - id
      - street
      - street_number
      - user
      - zipcode
    BlankEnum:
      enum:
      - ''
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/Shipping'
          readOnly: true
        sum_items:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        sum_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - items
      - shipping_method
      - user
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        cart:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        date_added:
          type: string
          format: date-time
          readOnly: true
      required:
      - cart
      - date_added
      - id
      - product
    CountryEnum:
      enum:
      - usa
      - poland
      - germany
      - czech
      type: string
      description: |-
        * `usa` - USA
        * `poland` - Poland
        * `germany` - Germany
        * `czech` - Czech Republic
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        date_valid:
          type: string
          format: date
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    EffectType:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        desc:
          type: string
          maxLength: 500
        product_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - desc
      - name
    FrequencyEnum:
      enum:
      - 7
      - 14
      - 31
      type: integer
      description: |-
        * `7` - weekly
        * `14` - bi-weekly
        * `31` - monthly
    Manufacturer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        products:
          type: array
          items:
            type: string
          readOnly: true
        date_created:
          type: string
          format: date
          readOnly: true
        logo_image:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
        product_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        sales_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        view_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        description:
          type: string
          nullable: true
          maxLength: 2000
        rating_average:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        country:
          $ref: '#/components/schemas/CountryEnum'
      required:
      - country
      - date_created
      - id
      - name
      - owner
      - products
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/Shipping'
          readOnly: true
        date_ordered:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        sum_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        sum_items:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        shipping_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        address:
          type: integer
          nullable: true
      required:
      - date_ordered
      - date_updated
      - id
      - items
      - shipping_method
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        order:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - id
      - order
      - product
    PaginatedCartItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
    PaginatedCartList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
    PaginatedDiscountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    PaginatedManufacturerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Manufacturer'
    PaginatedOrderItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedProductImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        country:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 100
        street_number:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        zipcode:
          type: string
          maxLength: 8
    PatchedCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/Shipping'
          readOnly: true
        sum_items:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        sum_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        date_valid:
          type: string
          format: date
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedEffectType:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        desc:
          type: string
          maxLength: 500
        product_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedManufacturer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        products:
          type: array
          items:
            type: string
          readOnly: true
        date_created:
          type: string
          format: date
          readOnly: true
        logo_image:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
        product_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        sales_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        view_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        description:
          type: string
          nullable: true
          maxLength: 2000
        rating_average:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        country:
          $ref: '#/components/schemas/CountryEnum'
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/Shipping'
          readOnly: true
        date_ordered:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        sum_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        sum_items:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        shipping_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        address:
          type: integer
          nullable: true
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        order:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
        effect_type:
          type: string
          readOnly: true
        favourited_by:
          type: array
          items:
            type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ProductTypeEnum'
        date_created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        main_product_image:
          type: string
          format: uri
        name:
          type: string
          maxLength: 100
        rating_average:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        warranty:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bypass:
          type: boolean
          description: Only required if product of type 'effect'
        power_type:
          description: |-
            Only required if product of type 'effect'

            * `9v` - 9V Powered
            * `12v` - 12V Powered
            * `inline ` - Inline Power
          oneOf:
          - $ref: '#/components/schemas/PowerTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        about:
          type: string
          nullable: true
          maxLength: 2000
        technical:
          type: string
          nullable: true
          maxLength: 2000
        other:
          type: string
          nullable: true
          maxLength: 2000
        character:
          type: string
          description: eg. 'fuzzy', 'slick'
          maxLength: 100
        size_type:
          description: |-
            Only required if product of type 'effect'

            * `compact` - compact
            * `full` - full sized
            * `double` - double
          oneOf:
          - $ref: '#/components/schemas/SizeTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        view_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bought_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedProductImage:
      type: object
      properties:
        image:
          type: string
          format: uri
        product:
          type: string
          readOnly: true
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        favourite_products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        type:
          $ref: '#/components/schemas/ProfileTypeEnum'
        bio:
          type: string
          nullable: true
          maxLength: 1000
        date_created:
          type: string
          format: date-time
          readOnly: true
        profile_image:
          type: string
          format: uri
          nullable: true
        review_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bought_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        favourite_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: string
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        liked_by:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        message:
          type: string
          maxLength: 1000
        rating:
          type: integer
          maximum: 5
          minimum: 0
        date_created:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        like_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedShipping:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        days_minimum:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedSubscriber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 127
        name:
          type: string
          maxLength: 100
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyEnum'
          minimum: -2147483648
          maximum: 2147483647
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
    PowerTypeEnum:
      enum:
      - 9v
      - 12v
      - 'inline '
      type: string
      description: |-
        * `9v` - 9V Powered
        * `12v` - 12V Powered
        * `inline ` - Inline Power
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
        effect_type:
          type: string
          readOnly: true
        favourited_by:
          type: array
          items:
            type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ProductTypeEnum'
        date_created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        main_product_image:
          type: string
          format: uri
        name:
          type: string
          maxLength: 100
        rating_average:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        warranty:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bypass:
          type: boolean
          description: Only required if product of type 'effect'
        power_type:
          description: |-
            Only required if product of type 'effect'

            * `9v` - 9V Powered
            * `12v` - 12V Powered
            * `inline ` - Inline Power
          oneOf:
          - $ref: '#/components/schemas/PowerTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        quantity:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        about:
          type: string
          nullable: true
          maxLength: 2000
        technical:
          type: string
          nullable: true
          maxLength: 2000
        other:
          type: string
          nullable: true
          maxLength: 2000
        character:
          type: string
          description: eg. 'fuzzy', 'slick'
          maxLength: 100
        size_type:
          description: |-
            Only required if product of type 'effect'

            * `compact` - compact
            * `full` - full sized
            * `double` - double
          oneOf:
          - $ref: '#/components/schemas/SizeTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        view_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bought_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - date_created
      - effect_type
      - favourited_by
      - id
      - manufacturer
      - name
      - owner
      - reviews
      - type
    ProductImage:
      type: object
      properties:
        image:
          type: string
          format: uri
        product:
          type: string
          readOnly: true
      required:
      - image
      - product
    ProductTypeEnum:
      enum:
      - effect
      - guitar
      - accessory
      type: string
      description: |-
        * `effect` - effect
        * `guitar` - guitar
        * `accessory` - accessory
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        favourite_products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        type:
          $ref: '#/components/schemas/ProfileTypeEnum'
        bio:
          type: string
          nullable: true
          maxLength: 1000
        date_created:
          type: string
          format: date-time
          readOnly: true
        profile_image:
          type: string
          format: uri
          nullable: true
        review_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        bought_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        favourite_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - date_created
      - favourite_products
      - id
      - type
      - user
    ProfileTypeEnum:
      enum:
      - client
      - admin
      - manufacturer
      type: string
      description: |-
        * `client` - client user
        * `admin` - admin user
        * `manufacturer` - manufacturer user
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: string
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        liked_by:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        message:
          type: string
          maxLength: 1000
        rating:
          type: integer
          maximum: 5
          minimum: 0
        date_created:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        like_count:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - author
      - date_created
      - id
      - liked_by
      - message
      - product
      - title
    Shipping:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        days_minimum:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - name
    SizeTypeEnum:
      enum:
      - compact
      - full
      - double
      type: string
      description: |-
        * `compact` - compact
        * `full` - full sized
        * `double` - double
    StatusEnum:
      enum:
      - paid
      - sent
      - delivered
      - progress
      type: string
      description: |-
        * `paid` - paid
        * `sent` - sent
        * `delivered` - delivered
        * `progress` - in progress
    Subscriber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 127
        name:
          type: string
          maxLength: 100
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyEnum'
          minimum: -2147483648
          maximum: 2147483647
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - email
      - id
      - name
      - user
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
      required:
      - id
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
