# Generated by Django 4.2.4 on 2023-09-01 14:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import sklep.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EffectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.CharField(max_length=500)),
                ('name', models.CharField(max_length=100)),
                ('product_count', models.PositiveIntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('logo_image', models.ImageField(blank=True, default='../static/img/default_logo.png', null=True, upload_to=sklep.models.upload_to_manufacturer)),
                ('products_count', models.PositiveIntegerField(blank=True, default=0)),
                ('sales_count', models.PositiveIntegerField(blank=True, default=0)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('rating_average', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, default='temp', unique=True)),
                ('country', models.CharField(choices=[('usa', 'USA'), ('poland', 'Poland'), ('germany', 'Germany'), ('czech', 'Czech Republic')], max_length=50)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manufacturers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('effect', 'effect'), ('guitar', 'guitar'), ('accessory', 'accessory')], max_length=50)),
                ('price', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('main_product_image', models.ImageField(blank=True, default='../static/img/default_effect.jpg', upload_to=sklep.models.upload_to_product)),
                ('name', models.CharField(max_length=100)),
                ('rating_average', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('warranty', models.PositiveIntegerField(blank=True, default=2)),
                ('bypass', models.BooleanField(blank=True, default=True)),
                ('shipping', models.FloatField(blank=True, default=10.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('quantity', models.PositiveIntegerField(blank=True, default=5)),
                ('discount', models.FloatField(blank=True, default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(0.0)])),
                ('slug', models.SlugField(blank=True, default='temp', unique=True)),
                ('effect_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='sklep.effecttype')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='sklep.manufacturer')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1000)),
                ('rating', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='temp', unique=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='sklep.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=sklep.models.ProductImage.image_dir)),
                ('slug', models.SlugField(blank=True, default='temp', unique=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='sklep.product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('paid', 'paid'), ('sent', 'sent'), ('delivered', 'delivered'), ('progress', 'in progress')], max_length=50)),
                ('sum_cost', models.FloatField(blank=True, default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('products', models.ManyToManyField(blank=True, related_name='orders', to='sklep.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_items', models.PositiveIntegerField(blank=True, default=0)),
                ('sum_cost', models.FloatField(blank=True, default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('shipping', models.FloatField(blank=True, default=10.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('discount', models.FloatField(blank=True, default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('products', models.ManyToManyField(blank=True, related_name='carts', to='sklep.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
